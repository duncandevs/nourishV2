import { asyncFetchOpenAICompletion } from "../../clients/openAiClient";
import { FetchMethod } from '../types';

// const completionResponse = async (prompt: string) => 
//     await openAiClient.completions.create({ model: MODEL, prompt, max_tokens:512, temperature: 0 });

/*
    NOTES on caching recent results 
        1. grab the first 50 foods generated by the user
        2. cache them locally on the device
        3. use auto completion feature on the items before performing any supabase look-ups
        4. beware of time complexity in <Array> vs <Object> especially with lookUps
*/

const getOpenAISearchPromptResult = async (searchTerm:string): FetchMethod => {
    try {
        const response = await asyncFetchOpenAICompletion({ searchTerm });
        const generatedText = response?.choices?.[0]?.message?.function_call?.arguments;
        const data = generatedText ? JSON.parse(generatedText) : null
        return { data, error:null};   
    } catch (error) {
        return { data: null, error}
    }
};

export default {
    getOpenAISearchPromptResult,
}